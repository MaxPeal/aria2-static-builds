# This is a basic workflow to help you get started with Actions

name: aria2_x86_64-Static-link-on-push

# https://docs.github.com/en/free-pro-team@latest/actions/managing-workflow-runs/enabling-debug-logging
# # Enabling runner diagnostic logging
# Runner diagnostic logging provides additional log files that contain information about how a runner is executing a job. Two extra log files are added to the log archive:
# The runner process log, which includes information about coordinating and setting up runners to execute jobs.
# The worker process log, which logs the execution of a job.
# To enable runner diagnostic logging, set the following secret in the repository that contains the workflow: ACTIONS_RUNNER_DEBUG to true.
# To download runner diagnostic logs, download the log archive of the workflow run. The runner diagnostic logs are contained in the runner-diagnostic-logs folder. For more information on downloading logs, see "Downloading logs."
##
# # Enabling step debug logging
# Step debug logging increases the verbosity of a job's logs during and after a job's execution.
# To enable step debug logging, you must set the following secret in the repository that contains the workflow: ACTIONS_STEP_DEBUG to true.
# After setting the secret, more debug events are shown in the step logs. For more information, see "Viewing logs to diagnose failures".



# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          ref: master
      - name: mkdir ccache dirs
        run: |
          mkdir -p /home/runner/.ccache /tmp/ccache /tmp/cachedir ~/cache ~/cache/exclude ~/.ccache ./.ccache ./node_modules /ccache /node_modules
      - name: Cache multiple paths
        uses: actions/cache@v2
        with:
         path: |
           /home/runner/.ccache
           /tmp/ccache
           /tmp/cachedir
           ~/cache
           !~/cache/exclude
           **/node_modules
           ~/.ccache
           **/.ccache
         # https://github.com/azerothcore/azerothcore-wotlk/blob/master/.github/workflows/core_build.yml
         key: ccache:${{ matrix.os }}:${{ matrix.compiler }}:${{ matrix.modules }}-modules:${{ github.ref }}:${{ github.sha }}
         restore-keys: |
           ccache:${{ matrix.os }}:${{ matrix.compiler }}:${{ matrix.modules }}-modules:${{ github.ref }}
           ccache:${{ matrix.os }}:${{ matrix.compiler }}:${{ matrix.modules }}-modules
      - name: installation docker-composer
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` > docker-compose
          sudo chmod +x docker-compose
          ./docker-compose up -d
      - name: Compile
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker exec docker_build_aria2_311 sh build-scripts/gnu-linux-config/build.sh
          docker cp docker_build_aria2_311:/tmp/aria2-1.35.0/src/aria2c ./
          # docker exec docker_build_aria2_311 tar Ccf $(dirname /tmp/aria2-1.35.0/src/aria2c) - $(basename /tmp/aria2-1.35.0/src/aria2c) | tar Cxf ./OUT-BIN -
          #WORKING# $(mkdir ./OUT ||:) && docker exec docker_build_aria2_311 tar -f - -cC $(dirname /tmp/aria2-1.35.0/src) $(basename /tmp/aria2-1.35.0/src) | tar -f - -xC ./OUT
          $(mkdir ./OUT ||:) && docker exec docker_build_aria2_311 tar -f - -cC $(dirname /tmp/OUT) $(basename /tmp/OUT) | tar -f - -xC ./OUT
          # https://docs.docker.com/engine/reference/commandline/cp/
          # docker exec CONTAINER tar Ccf $(dirname SRC_PATH) - $(basename SRC_PATH) | tar Cxf DEST_PATH -
          # NOT WORKING with busybox tar# tar Ccf $(dirname SRC_PATH) - $(basename SRC_PATH) | docker exec -i CONTAINER tar Cxf DEST_PATH -
          # NOT WORKING with busybox tar#  #docker cp docker_build_aria2_311:/tmp/aria2-1.35.0/src/aria2c-* ./
      - name: ccache --print-stats
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker exec docker_build_aria2_311 ccache --print-stats
      - name: ccache -s
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker exec docker_build_aria2_311 ccache -s
      - name: clean-up
        run: |
          ls -laRhs ./artifact/
          rm -rf ./artifact/
          mkdir -p ./artifact/
          mv aria2c ./artifact/ ||:
          mv ./OUT/* ./artifact/
      - name : upload-artifact
        uses: actions/upload-artifact@master
        with:
          name: aria2c
          path: ./artifact/
