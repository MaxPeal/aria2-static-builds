#!/bin/sh

# In this configuration, the following dependent libraries are used:
#
# * zlib
# * c-ares
# * expat
# * sqlite3
# * openSSL
# * libssh2

#COMPILER AND PATH
PREFIX=/usr
C_COMPILER="gcc"
CXX_COMPILER="g++"

patch="/tmp/"$(mktemp -u patch.XXXXXX)
cat << "EOF" > ${patch}
diff -uNr a/src/HttpResponseCommand.cc b/src/HttpResponseCommand.cc
--- a/src/HttpResponseCommand.cc	2019-10-06 09:17:42.000000000 +0800
+++ b/src/HttpResponseCommand.cc	2020-04-27 18:30:10.000000000 +0800
@@ -239,6 +239,9 @@
   }
 
   if (statusCode >= 300) {
+    if (statusCode == 403) {
+      grp->increaseAndValidateHttpForbidden();
+    }
     if (statusCode == 404) {
       grp->increaseAndValidateFileNotFoundCount();
     }
diff -uNr a/src/HttpSkipResponseCommand.cc b/src/HttpSkipResponseCommand.cc
--- a/src/HttpSkipResponseCommand.cc	2019-10-06 09:17:42.000000000 +0800
+++ b/src/HttpSkipResponseCommand.cc	2020-04-27 18:30:10.000000000 +0800
@@ -213,6 +213,14 @@
         return prepareForRetry(0);
       }
       throw DL_ABORT_EX2(EX_AUTH_FAILED, error_code::HTTP_AUTH_FAILED);
+    case 400:
+    case 403:
+      if (getOption()->getAsInt(PREF_MAX_HTTP_FORBIDDEN) == 0) {
+        throw DL_ABORT_EX2(MSG_RESOURCE_FORBIDDEN,
+                           error_code::RESOURCE_FORBIDDEN);
+      }
+      throw DL_RETRY_EX2(MSG_RESOURCE_FORBIDDEN,
+                         error_code::RESOURCE_FORBIDDEN);
     case 404:
       if (getOption()->getAsInt(PREF_MAX_FILE_NOT_FOUND) == 0) {
         throw DL_ABORT_EX2(MSG_RESOURCE_NOT_FOUND,
@@ -220,6 +228,7 @@
       }
       throw DL_RETRY_EX2(MSG_RESOURCE_NOT_FOUND,
                          error_code::RESOURCE_NOT_FOUND);
+    case 500:
     case 502:
     case 503:
       // Only retry if pretry-wait > 0. Hammering 'busy' server is not
diff -uNr a/src/OptionHandlerFactory.cc b/src/OptionHandlerFactory.cc
--- a/src/OptionHandlerFactory.cc	2019-10-06 09:17:42.000000000 +0800
+++ b/src/OptionHandlerFactory.cc	2020-04-27 18:30:10.000000000 +0800
@@ -440,7 +440,7 @@
   {
     OptionHandler* op(new NumberOptionHandler(PREF_MAX_CONNECTION_PER_SERVER,
                                               TEXT_MAX_CONNECTION_PER_SERVER,
-                                              "1", 1, 16, 'x'));
+                                              "10", 1, -1, 'x'));
     op->addTag(TAG_BASIC);
     op->addTag(TAG_FTP);
     op->addTag(TAG_HTTP);
@@ -501,7 +501,7 @@
   }
   {
     OptionHandler* op(new UnitNumberOptionHandler(
-        PREF_MIN_SPLIT_SIZE, TEXT_MIN_SPLIT_SIZE, "20M", 1_m, 1_g, 'k'));
+        PREF_MIN_SPLIT_SIZE, TEXT_MIN_SPLIT_SIZE, "1M", 1_k, 1_g, 'k'));
     op->addTag(TAG_BASIC);
     op->addTag(TAG_FTP);
     op->addTag(TAG_HTTP);
@@ -862,8 +862,18 @@
     handlers.push_back(op);
   }
   {
+    OptionHandler* op(new NumberOptionHandler(PREF_MAX_HTTP_FORBIDDEN,
+                                              TEXT_MAX_HTTP_FORBIDDEN, "0", -1));
+    op->addTag(TAG_ADVANCED);
+    op->addTag(TAG_HTTP);
+    op->setInitialOption(true);
+    op->setChangeGlobalOption(true);
+    op->setChangeOptionForReserved(true);
+    handlers.push_back(op);
+  }
+  {
     OptionHandler* op(new NumberOptionHandler(PREF_MAX_FILE_NOT_FOUND,
-                                              TEXT_MAX_FILE_NOT_FOUND, "0", 0));
+                                              TEXT_MAX_FILE_NOT_FOUND, "0", -1));
     op->addTag(TAG_FTP);
     op->addTag(TAG_HTTP);
     op->setInitialOption(true);
@@ -971,7 +981,7 @@
   }
   {
     OptionHandler* op(
-        new NumberOptionHandler(PREF_SPLIT, TEXT_SPLIT, "5", 1, -1, 's'));
+        new NumberOptionHandler(PREF_SPLIT, TEXT_SPLIT, "15", 1, -1, 's'));
     op->addTag(TAG_BASIC);
     op->addTag(TAG_FTP);
     op->addTag(TAG_HTTP);
diff -uNr a/src/RequestGroup.cc b/src/RequestGroup.cc
--- a/src/RequestGroup.cc	2019-10-06 09:17:42.000000000 +0800
+++ b/src/RequestGroup.cc	2020-04-27 18:30:10.000000000 +0800
@@ -139,6 +139,7 @@
       numStreamConnection_(0),
       numStreamCommand_(0),
       numCommand_(0),
+      httpForbiddenCount_(0),
       fileNotFoundCount_(0),
       maxDownloadSpeedLimit_(option->getAsInt(PREF_MAX_DOWNLOAD_LIMIT)),
       maxUploadSpeedLimit_(option->getAsInt(PREF_MAX_UPLOAD_LIMIT)),
@@ -1255,6 +1256,17 @@
     lastModifiedTime_ = time;
   }
 }
+void RequestGroup::increaseAndValidateHttpForbidden()
+{
+  ++httpForbiddenCount_;
+  const int maxCount = option_->getAsInt(PREF_MAX_HTTP_FORBIDDEN);
+  if (maxCount > 0 && httpForbiddenCount_ >= maxCount &&
+      downloadContext_->getNetStat().getSessionDownloadLength() == 0) {
+    throw DOWNLOAD_FAILURE_EXCEPTION2(
+        fmt("Reached max-http-forbidden count=%d", maxCount),
+        error_code::MAX_HTTP_FORBIDDEN);
+  }
+}
 
 void RequestGroup::increaseAndValidateFileNotFoundCount()
 {
diff -uNr a/src/RequestGroup.h b/src/RequestGroup.h
--- a/src/RequestGroup.h	2019-10-06 09:17:42.000000000 +0800
+++ b/src/RequestGroup.h	2020-04-27 18:30:10.000000000 +0800
@@ -155,6 +155,8 @@
 
   int numCommand_;
 
+  int httpForbiddenCount_;
+
   int fileNotFoundCount_;
 
   int maxDownloadSpeedLimit_;
@@ -414,6 +416,8 @@
 
   void updateLastModifiedTime(const Time& time);
 
+  void increaseAndValidateHttpForbidden();
+
   void increaseAndValidateFileNotFoundCount();
 
   // Just set inMemoryDownload flag true.
diff -uNr a/src/bittorrent_helper.cc b/src/bittorrent_helper.cc
--- a/src/bittorrent_helper.cc	2019-10-06 09:17:42.000000000 +0800
+++ b/src/bittorrent_helper.cc	2020-04-27 18:30:10.000000000 +0800
@@ -216,6 +216,8 @@
     fileEntries.reserve(filesList->size());
     int64_t length = 0;
     int64_t offset = 0;
+    int64_t fileIndex = 1;
+    std::string selectedFileIndex = "";
     // multi-file mode
     torrent->mode = BT_FILE_MODE_MULTI;
     for (auto& f : *filesList) {
@@ -293,7 +295,27 @@
       fileEntry->setSuffixPath(suffixPath);
       fileEntry->setMaxConnectionPerServer(maxConn);
       fileEntries.push_back(fileEntry);
+
+      std::string filename = strjoin(pathelem.end()-1, pathelem.end(),' ',std::ptr_fun(util::encodeNonUtf8));
+      if( filename.find_first_of("_____padding_file_")!=std::string::npos && filename.find("BitComet")!=std::string::npos ){
+          A2_LOG_NOTICE(fmt("ignoring file: %s",filename.c_str()));
+      }else if( filename.find_first_of("RARBG.txt")!=std::string::npos ){
+          A2_LOG_NOTICE(fmt("ignoring file: %s",filename.c_str()) );
+      }else if( filename.find_first_of("RARBG_DO_NOT_MIRROR.exe")!=std::string::npos ){
+          A2_LOG_NOTICE(fmt("ignoring file: %s",filename.c_str()));
+      }else{
+          selectedFileIndex += std::to_string(fileIndex)+",";
+      }
+
       offset += fileEntry->getLength();
+      fileIndex += 1;
+
+    }
+    if(option->get(PREF_SELECT_FILE).empty()){
+        A2_LOG_NOTICE(fmt("SYSTEM SET PREF_SELECT_FILE: %s",selectedFileIndex.c_str()));
+        option->put(PREF_SELECT_FILE,selectedFileIndex.c_str());
+    }else{
+        A2_LOG_NOTICE(fmt("GOT USER PREF_SELECT_FILE: %s",option->get(PREF_SELECT_FILE).c_str()));
     }
   }
   else {
diff -uNr a/src/bittorrent_helper.h b/src/bittorrent_helper.h
--- a/src/bittorrent_helper.h	2019-10-06 09:17:42.000000000 +0800
+++ b/src/bittorrent_helper.h	2020-04-27 18:30:11.000000000 +0800
@@ -50,6 +50,7 @@
 #include "util.h"
 #include "DownloadContext.h"
 #include "TimeA2.h"
+#include "LogFactory.h"
 
 namespace aria2 {
 
diff -uNr a/src/error_code.h b/src/error_code.h
--- a/src/error_code.h	2019-10-06 09:17:42.000000000 +0800
+++ b/src/error_code.h	2020-04-27 18:30:10.000000000 +0800
@@ -76,6 +76,8 @@
   JSON_PARSE_ERROR = 30,
   REMOVED = 31,
   CHECKSUM_ERROR = 32,
+  RESOURCE_FORBIDDEN= 101,
+  MAX_HTTP_FORBIDDEN=102,
 };
 
 } // namespace error_code
diff -uNr a/src/message.h b/src/message.h
--- a/src/message.h	2019-10-06 09:17:42.000000000 +0800
+++ b/src/message.h	2020-04-27 18:30:10.000000000 +0800
@@ -144,6 +144,7 @@
 #define MSG_VERIFICATION_FAILED _("Checksum error detected. file=%s")
 #define MSG_INCOMPLETE_RANGE _("Incomplete range specified. %s")
 #define MSG_STRING_INTEGER_CONVERSION_FAILURE _("Failed to convert string into value: %s")
+#define MSG_RESOURCE_FORBIDDEN _("Resource forbidden")
 #define MSG_RESOURCE_NOT_FOUND _("Resource not found")
 #define MSG_FILE_RENAMED _("File already exists. Renamed to %s.")
 #define MSG_CANNOT_PARSE_METALINK _("Cannot parse metalink XML file. XML may be malformed.")
diff -uNr a/src/prefs.cc b/src/prefs.cc
--- a/src/prefs.cc	2019-10-06 09:17:42.000000000 +0800
+++ b/src/prefs.cc	2020-04-27 18:30:10.000000000 +0800
@@ -261,6 +261,8 @@
 // value: true | false
 PrefPtr PREF_REMOTE_TIME = makePref("remote-time");
 // value: 1*digit
+PrefPtr PREF_MAX_HTTP_FORBIDDEN = makePref("max-http-forbidden");
+// value: 1*digit
 PrefPtr PREF_MAX_FILE_NOT_FOUND = makePref("max-file-not-found");
 // value: epoll | select
 PrefPtr PREF_EVENT_POLL = makePref("event-poll");
diff -uNr a/src/prefs.h b/src/prefs.h
--- a/src/prefs.h	2019-10-06 09:17:42.000000000 +0800
+++ b/src/prefs.h	2020-04-27 18:30:10.000000000 +0800
@@ -214,6 +214,8 @@
 // value: true | false
 extern PrefPtr PREF_REMOTE_TIME;
 // value: 1*digit
+extern PrefPtr PREF_MAX_HTTP_FORBIDDEN;
+// value: 1*digit
 extern PrefPtr PREF_MAX_FILE_NOT_FOUND;
 // value: epoll | select
 extern PrefPtr PREF_EVENT_POLL;
diff -uNr a/src/usage_text.h b/src/usage_text.h
--- a/src/usage_text.h	2019-10-06 09:17:42.000000000 +0800
+++ b/src/usage_text.h	2020-04-27 18:30:10.000000000 +0800
@@ -468,6 +468,15 @@
     "                              connection to HTTP/FTP/proxy server. After the\n" \
     "                              connection is established, this option makes no\n" \
     "                              effect and --timeout option is used instead.")
+#define TEXT_MAX_HTTP_FORBIDDEN                                         \
+  _(" --max-http-forbidden=NUM     If aria2 receives `forbidden' status from the\n" \
+    "                              remote HTTPservers NUM times without getting\n" \
+    "                              a single byte, then force the download to fail.\n" \
+    "                              Specify 0 to disable this option.\n" \
+    "                              This options is effective only when using\n" \
+    "                              HTTPservers. The number of retry attempt is\n" \
+    "                              counted toward --max-tries, so it should be\n" \
+    "                              configured too.")
 #define TEXT_MAX_FILE_NOT_FOUND                                         \
   _(" --max-file-not-found=NUM     If aria2 receives `file not found' status from the\n" \
     "                              remote HTTP/FTP servers NUM times without getting\n" \

EOF

patch -p1 < ${patch}
rm -fr ${patch}
## BUILD ##
PKG_CONFIG_PATH=/opt/aria2-i386/build_libs/lib/pkgconfig/ \
LD_LIBRARY_PATH=/opt/aria2-i386/build_libs/lib/ \
CC="$C_COMPILER" \
CXX="$CXX_COMPILER" \
./configure \
    --prefix=$PREFIX \
    --without-libxml2 \
    --without-libgcrypt \
    --with-openssl \
    --without-libnettle \
    --without-gnutls \
    --without-libgmp \
    --with-libssh2 \
    --with-sqlite3 \
    --with-ca-bundle='/etc/ssl/certs/ca-certificates.crt' \
    ARIA2_STATIC=yes \
    --enable-shared=no
